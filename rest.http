@baseUrl = http://localhost:9999

# ===========================================
# 1. VERIFICAÇÃO DE SAÚDE - Verificar se a API está em execução
# ===========================================
GET {{baseUrl}}/

###

# ===========================================
# 1.1. TESTE DO HEALTH CHECK SERVICE - Verificar processadores de pagamento
# ===========================================
GET {{baseUrl}}/test/health-check

###

# ===========================================
# 2. RESUMO INICIAL - Verificar estado inicial
# ===========================================
GET {{baseUrl}}/payments-summary?from=2025-07-01T00:00:00Z&to=2025-07-31T23:59:59Z

###

# ===========================================
# 3. RESETAR REDIS - Começar com estado limpo
# ===========================================
DELETE {{baseUrl}}/payments-summary

###

# ===========================================
# 4. PROCESSAR PAGAMENTOS - Testar processador padrão
# ===========================================

# Pagamento 1 - Valor pequeno
POST {{baseUrl}}/payments
Content-Type: application/json

{
    "correlationId": "550e8400-e29b-41d4-a716-446655440001",
    "amount": 19.90
}

###

# Pagamento 2 - Valor médio
POST {{baseUrl}}/payments
Content-Type: application/json

{
    "correlationId": "550e8400-e29b-41d4-a716-446655440002",
    "amount": 125.75
}

###

# Pagamento 3 - Valor grande
POST {{baseUrl}}/payments
Content-Type: application/json

{
    "correlationId": "550e8400-e29b-41d4-a716-446655440003",
    "amount": 999.99
}

###

# Pagamento 4 - Teste de precisão decimal
POST {{baseUrl}}/payments
Content-Type: application/json

{
    "correlationId": "550e8400-e29b-41d4-a716-446655440004",
    "amount": 0.01
}

###

# Pagamento 5 - Outro pagamento de teste
POST {{baseUrl}}/payments
Content-Type: application/json

{
    "correlationId": "550e8400-e29b-41d4-a716-446655440005",
    "amount": 49.99
}

###

# ===========================================
# 5. VERIFICAR RESUMO APÓS PAGAMENTOS
# ===========================================
GET {{baseUrl}}/payments-summary?from=2025-07-01T00:00:00Z&to=2025-07-31T23:59:59Z

###

# ===========================================
# 6. TESTES DE TRATAMENTO DE ERROS
# ===========================================

# Testar ID de correlação inválido (GUID vazio)
POST {{baseUrl}}/payments
Content-Type: application/json

{
    "correlationId": "00000000-0000-0000-0000-000000000000",
    "amount": 50.00
}

###

# Testar valor negativo
POST {{baseUrl}}/payments
Content-Type: application/json

{
    "correlationId": "550e8400-e29b-41d4-a716-446655440006",
    "amount": -10.00
}

###

# Testar valor zero
POST {{baseUrl}}/payments
Content-Type: application/json

{
    "correlationId": "550e8400-e29b-41d4-a716-446655440007",
    "amount": 0.00
}

###

# Testar ausência de ID de correlação
POST {{baseUrl}}/payments
Content-Type: application/json

{
    "amount": 25.00
}

###

# ===========================================
# 7. TESTES DE VALIDAÇÃO DE RESUMO
# ===========================================

# Testar ausência de parâmetros de data
GET {{baseUrl}}/payments-summary

###

# Testar formato de data inválido
GET {{baseUrl}}/payments-summary?from=invalid-date&to=2025-07-31T23:59:59Z

###

# Testar intervalo de datas invertido
GET {{baseUrl}}/payments-summary?from=2025-07-31T23:59:59Z&to=2025-07-01T00:00:00Z

###

# ===========================================
# 8. TESTES DE FUNCIONALIDADE DE INTERVALO DE DATAS (Novo GetSummaryAsync Refatorado)
# ===========================================

# Teste 1: Obter resumo apenas da hora atual
GET {{baseUrl}}/payments-summary?from={{$datetime iso8601 -1 h}}&to={{$datetime iso8601}}

###

# Teste 2: Obter resumo das últimas 24 horas
GET {{baseUrl}}/payments-summary?from={{$datetime iso8601 -1 d}}&to={{$datetime iso8601}}

###

# Teste 3: Obter resumo de um dia específico (hoje)
GET {{baseUrl}}/payments-summary?from={{$datetime iso8601 -0 d "yyyy-MM-ddT00:00:00Z"}}&to={{$datetime iso8601 -0 d "yyyy-MM-ddT23:59:59Z"}}

###

# Teste 4: Obter resumo para intervalo de tempo muito curto (últimos 10 minutos)
GET {{baseUrl}}/payments-summary?from={{$datetime iso8601 -10 m}}&to={{$datetime iso8601}}

###

# Teste 5: Obter resumo para um intervalo amplo (este mês)
GET {{baseUrl}}/payments-summary?from=2025-07-01T00:00:00Z&to=2025-07-31T23:59:59Z

###

# Teste 6: Obter resumo para intervalo futuro (deve retornar vazio)
GET {{baseUrl}}/payments-summary?from=2025-12-01T00:00:00Z&to=2025-12-31T23:59:59Z

###

# ===========================================
# 9. TESTES DE VERIFICAÇÃO PARA FILTRO POR TEMPO
# ===========================================

# Faça alguns pagamentos primeiro, depois teste diferentes intervalos de tempo
POST {{baseUrl}}/payments
Content-Type: application/json

{
    "correlationId": "time-test-001",
    "amount": 100.00
}

###

# Aguarde um momento e faça outro pagamento (pode executar manualmente)
# POST {{baseUrl}}/payments
# Content-Type: application/json
# 
# {
#     "correlationId": "time-test-002", 
#     "amount": 200.00
# }

###

# Teste: Obter resumo de 1 minuto atrás até agora (deve incluir pagamentos recentes)
GET {{baseUrl}}/payments-summary?from={{$datetime iso8601 -1 m}}&to={{$datetime iso8601}}


###
# ===========================================
# 10. VERIFICAÇÃO FINAL DE RESUMO
# ===========================================
GET {{baseUrl}}/payments-summary?from=2025-07-01T00:00:00Z&to=2025-07-31T23:59:59Z

###

# ===========================================
# 11. LIMPEZA - Resetar para próxima execução de teste
# ===========================================
DELETE {{baseUrl}}/payments-summary